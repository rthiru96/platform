{"ast":null,"code":"var _jsxFileName = \"/home/t/Desktop/venturit/src/layouts/sidebar/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Drawer, Box, Hidden, List, ListItem, ListItemIcon, ListItemText, IconButton } from \"@material-ui/core\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  expandedIcon: {\n    minWidth: \"58px\"\n  }\n});\n\nconst RouteLinks = _ref => {\n  _s();\n\n  var _useStyles;\n\n  let {\n    routes = [],\n    color,\n    isCollapsed,\n    ...props\n  } = _ref;\n  const classes = (_useStyles = useStyles()) !== null && _useStyles !== void 0 ? _useStyles : {};\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: List,\n    paddingBottom: \"80px !important\",\n    children: routes.map((prop, key) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: NavLink,\n              to: prop.path,\n              style: {\n                color: \"inherit\",\n                textDecoration: \"inherit\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  classes: {\n                    root: !isCollapsed && classes.expandedIcon\n                  },\n                  children: typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"img\",\n                    src: prop.icon,\n                    alt: prop.icon,\n                    color: \"var(--white)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"img\",\n                    src: prop.icon,\n                    alt: prop.icon,\n                    color: \"var(--white)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this), !isCollapsed && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    component: ListItemText,\n                    color: \"var(--white)\",\n                    fontWeight: \"500\",\n                    primary: prop.sidebarName,\n                    disableTypography: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), props.state[prop.sidebarName] ? /*#__PURE__*/_jsxDEV(ArrowDown, {\n                    htmlColor: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n                    htmlColor: \"white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)]\n              }, prop.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RouteLinks, \"LpG94fGMPG7B/LCQ+ela2fKlpdc=\", false, function () {\n  return [useStyles];\n});\n\n_c = RouteLinks;\n\nconst Sidebar = _ref2 => {\n  _s2();\n\n  let {\n    routes,\n    color,\n    isCollapsed,\n    handleDrawerToggle,\n    open,\n    handleDrawerClose\n  } = _ref2;\n  const [data, setData] = React.useState({});\n\n  const handleClick = e => () => {\n    setData({\n      [e]: !data[e]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        anchor: \"left\",\n        open: open,\n        onClose: handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true\n        },\n        children: [\n        /*#__PURE__*/\n        //Mobile Menu Button\n        _jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: IconButton,\n            color: \"inherit\",\n            onClick: handleDrawerToggle,\n            className: \"w-100 d-flex justify-content-end  align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              htmlColor: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this),\n        /*#__PURE__*/\n        //Menu Button\n        _jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: IconButton,\n            color: \"inherit\",\n            onClick: handleDrawerClose,\n            className: \"w-100 d-flex justify-content-end align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              htmlColor: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RouteLinks, {\n          routes: routes,\n          color: color,\n          isCollapsed: isCollapsed,\n          handleClick: handleClick,\n          state: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      smDown: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: Scrollbars,\n        autoHide: false,\n        borderRight: \"solid 1px var(--gray)\",\n        height: \"100vh !important\",\n        width: \"unset !important\",\n        bgcolor: \"var(--cerulean-blue)\",\n        minWidth: isCollapsed ? \"75px\" : \"260px\",\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          mdUp: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: IconButton,\n            onClick: handleDrawerToggle,\n            className: \"w-100 d-flex justify-content-end align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              htmlColor: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: IconButton,\n            onClick: handleDrawerClose,\n            className: \"w-100 d-flex justify-content-end align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n              htmlColor: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RouteLinks, {\n          routes: routes,\n          color: color,\n          isCollapsed: isCollapsed,\n          handleClick: handleClick,\n          state: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Sidebar, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n\n_c2 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteLinks\");\n$RefreshReg$(_c2, \"Sidebar\");","map":{"version":3,"sources":["/home/t/Desktop/venturit/src/layouts/sidebar/index.js"],"names":["React","Drawer","Box","Hidden","List","ListItem","ListItemIcon","ListItemText","IconButton","ChevronRightIcon","ArrowDown","Scrollbars","makeStyles","NavLink","MenuIcon","useStyles","expandedIcon","minWidth","RouteLinks","routes","color","isCollapsed","props","classes","map","prop","key","path","textDecoration","root","icon","sidebarName","state","id","Sidebar","handleDrawerToggle","open","handleDrawerClose","data","setData","useState","handleClick","e","keepMounted"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Drawer,\n  Box,\n  Hidden,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n} from \"@material-ui/core\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ArrowDown from \"@material-ui/icons/KeyboardArrowDown\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles({\n  expandedIcon: {\n    minWidth: \"58px\",\n  },\n});\n\nconst RouteLinks = ({ routes = [], color, isCollapsed, ...props }) => {\n  const classes = useStyles() ?? {};\n\n  return (\n    <Box component={List} paddingBottom=\"80px !important\">\n      {routes.map((prop, key) => {\n        return (\n          <React.Fragment key={key}>\n            <div>\n              <div className=\"m-1\">\n                <Box\n                  component={NavLink}\n                  to={prop.path}\n                  style={{ color: \"inherit\", textDecoration: \"inherit\" }}\n                >\n                  <ListItem button key={prop.id}>\n                    <ListItemIcon\n                      classes={{ root: !isCollapsed && classes.expandedIcon }}\n                    >\n                      {typeof prop.icon === \"string\" ? (\n                        <Box\n                          component=\"img\"\n                          src={prop.icon}\n                          alt={prop.icon}\n                          color=\"var(--white)\"\n                        />\n                      ) : (\n                        <Box\n                          component=\"img\"\n                          src={prop.icon}\n                          alt={prop.icon}\n                          color=\"var(--white)\"\n                        />\n                      )}\n                    </ListItemIcon>\n                    {!isCollapsed && (\n                      <>\n                        <Box\n                          component={ListItemText}\n                          color=\"var(--white)\"\n                          fontWeight=\"500\"\n                          primary={prop.sidebarName}\n                          disableTypography={true}\n                        />\n                        {props.state[prop.sidebarName] ? (\n                          <ArrowDown htmlColor=\"white\" />\n                        ) : (\n                          <ChevronRightIcon htmlColor=\"white\" />\n                        )}\n                      </>\n                    )}\n                  </ListItem>\n                </Box>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      })}\n    </Box>\n  );\n};\n\nconst Sidebar = ({\n  routes,\n  color,\n  isCollapsed,\n  handleDrawerToggle,\n  open,\n  handleDrawerClose,\n}) => {\n  const [data, setData] = React.useState({});\n  const handleClick = (e) => () => {\n    setData({ [e]: !data[e] });\n  };\n  return (\n    <>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={open}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {\n            //Mobile Menu Button\n            <Hidden mdUp>\n              <Box\n                component={IconButton}\n                color=\"inherit\"\n                onClick={handleDrawerToggle}\n                className=\"w-100 d-flex justify-content-end  align-items-center\"\n              >\n                <MenuIcon htmlColor=\"white\" />\n              </Box>\n            </Hidden>\n          }\n\n          {\n            //Menu Button\n            <Hidden smDown>\n              <Box\n                component={IconButton}\n                color=\"inherit\"\n                onClick={handleDrawerClose}\n                className=\"w-100 d-flex justify-content-end align-items-center\"\n              >\n                <MenuIcon htmlColor=\"white\" />\n              </Box>\n            </Hidden>\n          }\n\n          <RouteLinks\n            routes={routes}\n            color={color}\n            isCollapsed={isCollapsed}\n            handleClick={handleClick}\n            state={data}\n          />\n        </Drawer>\n      </Hidden>\n      <Hidden smDown>\n        <Box\n          component={Scrollbars}\n          autoHide={false}\n          borderRight=\"solid 1px var(--gray)\"\n          height=\"100vh !important\"\n          width=\"unset !important\"\n          bgcolor=\"var(--cerulean-blue)\"\n          minWidth={isCollapsed ? \"75px\" : \"260px\"}\n        >\n          {\n            <Hidden mdUp>\n              <Box\n                component={IconButton}\n                onClick={handleDrawerToggle}\n                className=\"w-100 d-flex justify-content-end align-items-center\"\n              >\n                <MenuIcon htmlColor=\"white\" />\n              </Box>\n            </Hidden>\n          }\n\n          {\n            <Hidden smDown>\n              <Box\n                component={IconButton}\n                onClick={handleDrawerClose}\n                className=\"w-100 d-flex justify-content-end align-items-center\"\n              >\n                <MenuIcon htmlColor=\"white\" />\n              </Box>\n            </Hidden>\n          }\n\n          <RouteLinks\n            routes={routes}\n            color={color}\n            isCollapsed={isCollapsed}\n            handleClick={handleClick}\n            state={data}\n          />\n        </Box>\n      </Hidden>\n    </>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}